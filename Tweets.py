# generated by datamodel-codegen:
#   filename:  Tweets.schema
#   timestamp: 2023-06-02T12:08:11+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class User(BaseModel):
    created_at: str
    default_profile_image: bool
    description: str
    fast_followers_count: int
    favourites_count: int
    followers_count: int
    friends_count: int
    has_custom_timelines: bool
    is_translator: bool
    listed_count: int
    location: str
    media_count: int
    name: str
    normal_followers_count: int
    possibly_sensitive: bool
    profile_banner_url: str
    profile_image_url_https: str
    screen_name: str
    statuses_count: int
    translator_type: str
    verified: bool
    withheld_in_countries: List
    id_str: str


class UserMention(BaseModel):
    id_str: str
    name: str
    screen_name: str
    profile: str


class Url(BaseModel):
    url: str
    expanded_url: str
    display_url: str


class MediaItem(BaseModel):
    media_url: str
    type: str
    video_url: Optional[str] = None


class User1(BaseModel):
    created_at: str
    default_profile_image: bool
    description: str
    fast_followers_count: int
    favourites_count: int
    followers_count: int
    friends_count: int
    has_custom_timelines: bool
    is_translator: bool
    listed_count: int
    location: str
    media_count: int
    name: str
    normal_followers_count: int
    possibly_sensitive: bool
    profile_banner_url: Optional[str] = None
    profile_image_url_https: str
    screen_name: str
    statuses_count: int
    translator_type: str
    url: Optional[str] = None
    verified: bool
    withheld_in_countries: List
    id_str: str


class QuotedTweet(BaseModel):
    user: User1
    id: str
    conversation_id: str
    full_text: str
    reply_count: int
    retweet_count: int
    favorite_count: int
    hashtags: List
    symbols: List
    user_mentions: List[UserMention]
    urls: List[Url]
    media: List[MediaItem]
    url: str
    created_at: str
    sort_index: str = Field(..., alias='#sort_index')
    view_count: int
    quote_count: int
    is_quote_tweet: bool
    is_retweet: bool
    is_truncated: bool
    is_thread: bool
    is_root_thread: bool
    root_thread_url: Optional[str] = None
    replying_to_tweet: Optional[str] = None


class ModelItem(BaseModel):
    user: User
    id: str
    conversation_id: str
    full_text: str
    reply_count: int
    retweet_count: int
    favorite_count: int
    hashtags: List[str]
    symbols: List
    user_mentions: List[UserMention]
    urls: List[Url]
    media: List[MediaItem]
    url: str
    created_at: str
    quote_count: int
    is_quote_tweet: bool
    is_retweet: bool
    is_truncated: bool
    is_thread: bool
    is_root_thread: bool
    startUrl: str
    view_count: Optional[int] = None
    root_thread_url: Optional[str] = None
    replying_to_tweet: Optional[str] = None
    quoted_tweet: Optional[QuotedTweet] = None


class Model(BaseModel):
    __root__: List[ModelItem]
